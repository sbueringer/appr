stages:
  - init
  - unit-tests
  - code-style
  - integration-tests
  - build
  - release
variables:
  FAILFASTCI_NAMESPACE: 'failfast-ci'
  IMAGE: quay.io/appr/appr


cache:
  paths:
    - cache

.job: &job
  before_script:
  - pip install -e .
  - pip install -r requirements_dev.txt -U
  script:
    - make test db=$APPR_TEST_DB
  tags:
    - kubernetes
  image: quay.io/appr/appr:kubectl

test-filesystem:
  <<: *job
  stage: unit-tests
  script:
    - pip install -U python-coveralls
    - make test
    - coveralls
  variables:
    APPR_TEST_DB: filesystem

test-etcd:
  <<: *job
  stage: integration-tests
  services:
    - quay.io/coreos/etcd:v3.0.6
  variables:
    APPR_TEST_DB: etcd
    ETCD_HOST: localhost

test-redis:
  <<: *job
  stage: integration-tests
  services:
    - redis:3
  variables:
    APPR_TEST_DB: redis
    REDIS_HOST: localhost

flake8:
  <<: *job
  stage: code-style
  script:
    - make flake8

pylint:
  <<: *job
  stage: code-style
  script:
    - pip install pylint
    - make pylint

compile:
  <<: *job
  stage: release
  script:
    - pip install https://github.com/pyinstaller/pyinstaller/archive/develop.zip
    - pyinstaller --add-data "appr/jsonnet/:appr/jsonnet" --onefile bin/appr
  artifacts:
    paths:
      - dist/appr

.docker: &docker
  variables:
    DOCKER_HOST: tcp://localhost:2375
  image: docker:17.06-git
  before_script:
    - docker login -u $DOCKER_USER -p $DOCKER_PASS quay.io
  services:
     - docker:17.06-dind
  tags:
    - kubernetes

docker-build:
  <<: *docker
  stage: build
  script:
    - docker build -t $IMAGE:$CI_BUILD_REF_NAME .
  except:
    - tags
    - master

docker-build:
  <<: *docker
  stage: init
  script:
    - make build-test
  when: manual

.docker-push: &docker-push
  <<: *docker
  stage: release
  script:
    - docker build -t $IMAGE:$CI_BUILD_REF_NAME .
    - docker push $IMAGE:$CI_BUILD_REF_NAME

docker-release:
  <<: *docker-push
  only:
    - tags
    - master

docker-push:
  <<: *docker-push
  except:
    - tags
    - master
  when: manual

pypi-release:
  <<: *job
  image: python:2.7
  stage: release
  script:
    - make release
  tags:
    - kubernetes
  when: manual
  only:
    - tags
